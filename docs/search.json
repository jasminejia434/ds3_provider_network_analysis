[
  {
    "objectID": "ClusteringAnalysis.html",
    "href": "ClusteringAnalysis.html",
    "title": "Clustering Analysis",
    "section": "",
    "text": "Here We apply network K-means clustering to analyze the structure and connectivity of provider-organization relationships within the healthcare network. These techniques allow us to examine both the overall network structure and the clustering of providers based on their connection patterns.\nThe goal here is to cluster NPIs into distinct groups based on similarities in their relationships with TINs and potentially other characteristics (such as geographical location or specialty). This can help identify patterns among providers, such as groups that frequently work under the same TIN or have overlapping specialties."
  },
  {
    "objectID": "ClusteringAnalysis.html#elbow-plot-for-npi-dataset",
    "href": "ClusteringAnalysis.html#elbow-plot-for-npi-dataset",
    "title": "Clustering Analysis",
    "section": "Elbow Plot for NPI Dataset",
    "text": "Elbow Plot for NPI Dataset\n\nOptimal clusters for NPIs appear to be six or seven, as this level of segmentation provides meaningful insights while maintaining model simplicity. Each cluster could represent distinct categories of providers, such as those affiliated with different TINs (potentially corresponding to various healthcare organizations), providers with varying specialties (emphasizing areas of specialization or overlapping care), or providers from different geographical regions (capturing regional variations in healthcare practices). As a next step, we will look into network analysis to further explore these clusters and their interconnections."
  },
  {
    "objectID": "ExploratoryAnalysis.html",
    "href": "ExploratoryAnalysis.html",
    "title": "Exploratory Analysis",
    "section": "",
    "text": "The dataset originates from an insurance company and initially contains 7.1 million rows. To facilitate interpretation and optimize computational efficiency, a 1% sample of the original dataset has been extracted for the subsequent analysis.\n\nProvider’s Location\n\n! [ff] (images/cell-2-output-1.png)\nMost Represented States:\nFlorida (FL) has the highest number of NPIs, followed by Texas (TX) and Ohio (OH). These states appear to be major contributors in terms of healthcare provider representation. Other states like California (CA), Georgia (GA), Michigan (MI), and North Carolina (NC) also have significant numbers of NPIs, though not as high as the top three.\nHealthcare Access:\nThese states may have better healthcare accessibility, as indicated by the higher number of providers. However, this depends on how these NPIs are distributed within each state — they could be concentrated in urban areas, leaving rural areas underserved. Our future next step is to look at the specific zipcodes, to look at where the NPIs are clustered in.\n\n\nProvider’s Specialty\n\nMost Common Specialties:\nThe Physician Assistants & Advanced Practice Nursing Providers/Nurse Practitioner Family specialty leads with the highest number of NPIs, followed by Physician Assistants & Advanced Practice Nursing Providers/Physician Assistant. These two specialties stand out significantly, indicating a high number of healthcare providers practicing in family nursing and physician assistant roles.\nImplications for Healthcare Access:\nThe dominance of nurse practitioners and physician assistants indicates a shift towards using more mid-level healthcare providers to improve access to healthcare. This trend is often seen in regions where there may be a shortage of physicians, as these practitioners help bridge the gap by providing essential services."
  },
  {
    "objectID": "Untitled12.html",
    "href": "Untitled12.html",
    "title": "Concept_Showcase_Jia",
    "section": "",
    "text": "import csv\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfile_path = '/content/tin_npi_1.csv'\ndf = pd.read_csv(file_path)\n\ndf['Geographical_Location'] = df['PROVIDER_BUSINESS_MAILING_ADDRESS_STATE_NAME']\ndf['Specialty'] = df['PROVIDER_TAXONOMY_DESCRIPTION']\n\n# Count the number of NPIs by top states/Specialty\ntop_states = df['Geographical_Location'].value_counts().head(10)\ntop_specialties = df['Specialty'].value_counts().head(10)\n\n# Plotting top states\nplt.figure(figsize=(10, 6))\nsns.barplot(x=top_states.values, y=top_states.index, hue=top_states.index, dodge=False, legend=False)\nplt.xlabel('Number of NPIs')\nplt.ylabel('State')\nplt.title('Top 10 States by Number of NPIs')\nplt.tight_layout()\nplt.show()\n\n# Plotting top states\nplt.figure(figsize=(10, 4))\nsns.barplot(x=top_specialties.values, y=top_specialties.index, hue=top_specialties.index, dodge=False, legend=False)\nplt.xlabel('Number of NPIs')\nplt.ylabel('Specialty')\nplt.title('Top 10 Specialties by Number of NPIs')\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport networkx as nx\nimport matplotlib.pyplot as plt\nimport pandas as pd\nfrom sklearn.cluster import KMeans\nfrom sklearn.preprocessing import StandardScaler\n\n# Take a sample of the data to reduce computation time\nsample_size = 3000\ndf = df.sample(n=sample_size, random_state=42)\n\n# Extract NPI and TIN_VALUE columns\nnpi_list = df['NPI'].astype(str).tolist()\ntin_list = df['TIN_VALUE'].astype(str).tolist()\n\n# Create a bipartite graph\nB = nx.Graph()\n\n# Add nodes with the bipartite attribute\nB.add_nodes_from(npi_list, bipartite='NPI')\nB.add_nodes_from(tin_list, bipartite='TIN')\n\n# Add edges between NPIs and TINs\nedges = list(zip(npi_list, tin_list))\nB.add_edges_from(edges)\n\nprint(B)\n\n# Separate nodes by set\nnpi_nodes = {n for n, d in B.nodes(data=True) if d['bipartite'] == 'NPI'}\ntin_nodes = set(B) - npi_nodes\n\n# Clustering analysis for NPIs and TINs\n# Create a dataframe for clustering with NPI and TIN relationships\nadjacency_matrix = nx.to_pandas_adjacency(B, nodelist=list(npi_nodes) + list(tin_nodes))\n\n# Limit the size of the adjacency matrix to avoid issues with large graph size\nadjacency_matrix = adjacency_matrix.loc[:, (adjacency_matrix != 0).any(axis=0)]\n\n# Standardize the data\nscaler = StandardScaler()\nadjacency_matrix_scaled = scaler.fit_transform(adjacency_matrix)\n\n# Elbow plot to determine optimal number of clusters\nsse = []\nk_range = range(1, 11)\nfor k in k_range:\n    kmeans = KMeans(n_clusters=k, random_state=42)\n    kmeans.fit(adjacency_matrix_scaled)\n    sse.append(kmeans.inertia_)\n\nplt.figure(figsize=(10, 6))\nplt.plot(k_range, sse, marker='o')\nplt.xlabel('Number of Clusters')\nplt.ylabel('Sum of Squared Errors (SSE)')\nplt.title('Elbow Plot to Determine Optimal Number of Clusters')\nplt.tight_layout()\nplt.show()\n\nGraph with 5057 nodes and 3000 edges\n\n\n\n\n\n\n\n\n\n\n# Visualize the network graph with different colors for bipartite sets\nplt.figure(figsize=(15, 15))\npos = nx.spring_layout(B, seed=42)\nnpi_color = 'blue'\ntin_color = 'red'\nnx.draw_networkx_nodes(B, pos, nodelist=npi_nodes, node_color=npi_color, node_size=10, label='NPI')\nnx.draw_networkx_nodes(B, pos, nodelist=tin_nodes, node_color=tin_color, node_size=10, label='TIN')\nnx.draw_networkx_edges(B, pos, edge_color='gray')\nplt.title('Network Graph of NPIs and TINs')\nplt.legend()\nplt.axis('off')\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\n\n# Network properties\n# 1) Degree distribution for NPIs and TINs\ndegrees_npi = [B.degree(n) for n in npi_nodes]\ndegrees_tin = [B.degree(n) for n in tin_nodes]\n\nplt.hist(degrees_npi, bins=20, alpha=0.5, label='NPI')\nplt.hist(degrees_tin, bins=20, alpha=0.5, label='TIN')\nplt.xlabel('Degree')\nplt.ylabel('Nodes')\nplt.title('Degree Distribution for Bipartite Network')\nplt.legend()\nplt.show()\n\n# 2) Density\nprint(\"Density of bipartite graph:\", nx.density(B))\n\n# 3) Connected components\nconnected_components = list(nx.connected_components(B))\nprint(\"Number of connected components:\", len(connected_components))\n\n# Node properties\n# 1) Clustering coefficient\n# Note: Clustering coefficient is typically not defined for bipartite graphs, but we can calculate it for the projection\nnpi_projection = nx.projected_graph(B, npi_nodes)\nprint(\"Average clustering coefficient for NPI projection:\", nx.average_clustering(npi_projection))\n\n# 2) Centrality\nbetweenness = nx.betweenness_centrality(B)\nbetweenness_df = pd.DataFrame.from_dict(betweenness, orient='index', columns=['Centrality'])\nprint(betweenness_df.head())\n\n\n\n\n\n\n\n\nDensity of bipartite graph: 0.00026497878712319683\nNumber of connected components: 1778\nAverage clustering coefficient for NPI projection: 0.39158256512996575\n            Centrality\n1912999350         0.0\n1841635570         0.0\n1538193404         0.0\n1154666337         0.0\n1871607614         0.0\n\n\n\nfrom collections import defaultdict\n\n# Find clusters: Identify NPIs that are connected to the same TIN\nnpi_groups_by_tin = defaultdict(list)\nfor tin in tin_nodes:\n    connected_npis = list(B.neighbors(tin))\n    if len(connected_npis) &gt; 1:\n        npi_groups_by_tin[tin] = connected_npis\n\n# Create a dictionary to store NPI attributes\nnpi_attributes = df.drop_duplicates(subset='NPI').set_index('NPI')[['Geographical_Location', 'Specialty']].to_dict('index')\n\n# Find the top 1 TINs with the highest number of associated NPIs\ntop_1_tins = sorted(npi_groups_by_tin.items(), key=lambda item: len(item[1]), reverse=True)[:1]\n\n# Print the top 1 TINs and their associated NPIs\nprint(\"Top 1 TINs with the highest number of NPIs:\")\nfor tin, npis in top_1_tins:\n    print(f'TIN: {tin}, Number of NPIs: {len(npis)}')\n    print(f'  NPIs: {npis}')\n    print()\n\n\n\nTop 1 TINs with the highest number of NPIs:\nTIN: 571004971, Number of NPIs: 20\n  NPIs: ['1891175642', '1497045348', '1407241417', '1811476013', '1306162375', '1891164224', '1932669819', '1275900151', '1699741447', '1437793247', '1548318223', '1346200409', '1003074808', '1851396295', '1740249150', '1063732048', '1720061203', '1740250653', '1528465747', '1679518492']\n\n\n\n\nnpi_list = [\n    '1891175642', '1497045348', '1407241417', '1811476013', '1306162375',\n    '1891164224', '1932669819', '1275900151', '1699741447', '1437793247',\n    '1548318223', '1346200409', '1003074808', '1851396295', '1740249150',\n    '1063732048', '1720061203', '1740250653', '1528465747', '1679518492'\n]\n\n# Convert NPI column to string if it's not already\ndf['NPI'] = df['NPI'].astype(str)\n\n# Filter the dataframe\nfiltered_df = df[df['NPI'].isin(npi_list)]\n\n# Count the occurrences of each state\nstate_counts = filtered_df['PROVIDER_BUSINESS_MAILING_ADDRESS_STATE_NAME'].value_counts()\n\n# Create the bar plot\nplt.figure(figsize=(10, 6))\nsns.barplot(x=state_counts.index, y=state_counts.values)\nplt.xlabel('State')\nplt.ylabel('Count')\nplt.title('Count of NPIs by State')\nplt.xticks(rotation=45, ha='right')\nplt.tight_layout()\nplt.show()\n\n\n# Count the occurrences of each specialty\nspecialty_counts = filtered_df['PROVIDER_TAXONOMY_DESCRIPTION'].value_counts()\n\n# Create the bar plot\nplt.figure(figsize=(12, 8))\nsns.barplot(x=specialty_counts.values, y=specialty_counts.index)\nplt.xlabel('Count')\nplt.ylabel('Specialty')\nplt.title('Count of NPIs by Specialty')\nplt.tight_layout()\nplt.show()"
  },
  {
    "objectID": "NetworkAnalysis.html",
    "href": "NetworkAnalysis.html",
    "title": "Network Analysis",
    "section": "",
    "text": "The current NPI-TIN bipartite dataset is computationally intensive and requires significant resources, leading to prolonged processing times. To optimize efficiency and expedite the analysis, I am implementing a random sample of 3,000 individual NPI and TIN values for further processing.\nThe network graph illustrates the relationships between TINs (Tax Identification Numbers) represented by blue nodes and NPIs (National Provider Identifiers) represented by red nodes. The circular layout suggests that the visualization focuses on the connections between nodes rather than geographical or hierarchical relationships. The dense connections between red and blue nodes highlight that multiple providers (NPIs) are often associated with specific healthcare organizations (TINs). Certain clusters of nodes, circled in the graph, suggest tightly connected groups, which may represent providers associated with the same organization or sharing similar characteristics such as specialization or geographic location.\n\n\nDegree Distribution:\n\nThe majority of TIN nodes have a very low degree, with most connecting to only one or a few NPIs.\nSimilarly, most NPIs are connected to very few TINs. The sharp drop-off in the degree distribution indicates that only a small number of nodes have higher degrees.\n\nDensity:\n\nThe bipartite graph has a density of approximately 0.00026, indicating that the network is extremely sparse. This is typical for large bipartite networks, where not all nodes are interconnected.\n\nConnected Components:\n\nThere are 1,778 connected components in the network. This suggests that the network is fragmented, with many smaller, isolated groups of nodes rather than a single large, interconnected component. These components may represent independent clusters of NPIs associated with specific TINs.\n\nClustering Coefficient:\n\nThe average clustering coefficient for the NPI projection is 0.3916. This moderate value suggests that there is some clustering among NPIs, meaning that NPIs associated with the same TIN are likely to form tight-knit groups."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Mapping Provider Networks: An Analysis of Healthcare Provider-Organization Relationships",
    "section": "",
    "text": "Research Objective\nThis project’s research objective is both exploratory/descriptive and inferential. The primary goal is to map and analyze the structural relationships within the U.S. healthcare network by examining how healthcare providers, identified by National Provider Identifiers (NPIs), connect to organizations, represented by Tax Identification Numbers (TINs), based on shared affiliations.\nThe initial network analysis will lay a foundation for understanding broader connectivity within the healthcare system, focusing on core clusters of affiliations and identifying central hubs. In the second phase, the project will infer patterns related to provider specialties by joining the NPI-TIN dataset with taxonomy data, categorizing providers by specialty. This enriched dataset will allow us to examine whether the distribution of TINs per NPI varies across provider types"
  },
  {
    "objectID": "about.html#policy-implications-of-the-network-analysis",
    "href": "about.html#policy-implications-of-the-network-analysis",
    "title": "Policy Implication",
    "section": "1. Policy Implications of the Network Analysis",
    "text": "1. Policy Implications of the Network Analysis\nThe analysis of the bipartite network of NPIs (National Provider Identifiers) and TINs (Tax Identification Numbers) provides valuable insights into the structure and dynamics of provider affiliations in the healthcare system. These insights have several important policy implications:"
  },
  {
    "objectID": "about.html#targeted-interventions-for-underserved-areas",
    "href": "about.html#targeted-interventions-for-underserved-areas",
    "title": "Policy Implication",
    "section": "Targeted Interventions for Underserved Areas:",
    "text": "Targeted Interventions for Underserved Areas:\nThe network’s fragmentation and the presence of many small connected components suggest that certain providers or organizations operate in isolated clusters. Policymakers can use this information to identify regions or healthcare groups that may lack access to larger networks, potentially leaving them underserved. Targeted policies could promote resource sharing, provider integration, or incentives to connect isolated clusters to larger networks."
  },
  {
    "objectID": "about.html#optimizing-resource-allocation",
    "href": "about.html#optimizing-resource-allocation",
    "title": "Policy Implication",
    "section": "Optimizing Resource Allocation:",
    "text": "Optimizing Resource Allocation:\nThe identification of TINs with high degrees (central organizations managing many providers) provides an opportunity for strategic resource allocation. For example, these central nodes could be prioritized for public health campaigns, funding for care coordination, or training programs, as they likely have a broader reach within the network."
  },
  {
    "objectID": "about.html#improving-network-transparency",
    "href": "about.html#improving-network-transparency",
    "title": "Policy Implication",
    "section": "Improving Network Transparency:",
    "text": "Improving Network Transparency:\nThe sparse nature of the network and its low density suggest that most providers are connected to only a few organizations. Increasing transparency about provider affiliations, such as requiring better disclosure of TIN-NPI relationships, could help patients and regulators better understand the healthcare landscape and make informed decisions."
  },
  {
    "objectID": "about.html#enhancing-policy-compliance-and-oversight",
    "href": "about.html#enhancing-policy-compliance-and-oversight",
    "title": "Policy Implication",
    "section": "Enhancing Policy Compliance and Oversight:",
    "text": "Enhancing Policy Compliance and Oversight:\nCentral TINs with extensive provider connections might play a critical role in driving compliance with healthcare policies, such as value-based payment models or reporting requirements. Policymakers could target these central nodes to streamline policy implementation and oversight. Encouraging Integration and Equity:\nFragmented clusters may reflect inequities in provider access or organizational affiliations. Policies that incentivize smaller providers to join larger networks or foster partnerships with central organizations could promote integration, leading to more equitable access to healthcare services across regions."
  }
]